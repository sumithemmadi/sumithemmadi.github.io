# -*- coding: utf-8 -*-
"""UI20CS21_NLP_LAB3

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1u0VsC-hbGFAsa2nHqqxPXIigw0c-aSpe
"""

!pip install requests beautifulsoup4 lxml  pandas nltk

import requests
from bs4 import BeautifulSoup as bs
from textblob import TextBlob
import re
import pandas as pd
import nltk

nltk.download('punkt')

data = {
    "reviews": [],
    "rating": [],
    "clean_reviews": [],
    "misspelled_words": []
}

for i in range(1, 2):
    cookies = {
        'T': 'TI169738268580200167761099876310796865407842753511472561605757522002',
        'SN': 'VIDA02EB88C5F8498F847B17AF4D044174.TOK72B58EE69D2E4451B9F03FA86B6378F9.1697382689.LO',
        'at': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImQ2Yjk5NDViLWZmYTEtNGQ5ZC1iZDQyLTFkN2RmZTU4ZGNmYSJ9.eyJleHAiOjE2OTkxMTA2ODksImlhdCI6MTY5NzM4MjY4OSwiaXNzIjoia2V2bGFyIiwianRpIjoiMTdkZmUwNDctOTE1YS00MzgwLWIzODktN2I2NTdhZTFlZjdmIiwidHlwZSI6IkFUIiwiZElkIjoiVEkxNjk3MzgyNjg1ODAyMDAxNjc3NjEwOTk4NzYzMTA3OTY4NjU0MDc4NDI3NTM1MTE0NzI1NjE2MDU3NTc1MjIwMDIiLCJrZXZJZCI6IlZJREEwMkVCODhDNUY4NDk4Rjg0N0IxN0FGNEQwNDQxNzQiLCJ0SWQiOiJtYXBpIiwidnMiOiJMTyIsInoiOiJDSCIsIm0iOnRydWUsImdlbiI6NH0.mjPgsUbODwauCbn88gZcC61vB_XrbwHDj_R976ZelwM',
        'K-ACTION': 'null',
        'AMCV_17EB401053DAF4840A490D4C%40AdobeOrg': '-227196251%7CMCIDTS%7C19646%7CMCMID%7C59787826550201821403920051171565315929%7CMCAID%7CNONE%7CMCOPTOUT-1697390234s%7CNONE',
        'S': 'd1t13Pz8/P18/Xz8/P0lZPz8/P+DIVhufLqMW3PY1MNEdPyfKztwew2t1Aup2NBU+ytdfUpVVW8mi0SyySudQi7QX5A==',
    }

    headers = {
        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/118.0',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
        'Accept-Language': 'en-US,en;q=0.5',
        'Upgrade-Insecure-Requests': '1',
        'Sec-Fetch-Dest': 'document',
        'Sec-Fetch-Mode': 'navigate',
        'Sec-Fetch-Site': 'none',
        'Sec-Fetch-User': '?1',
        'Connection': 'keep-alive',
        # 'Cookie': 'T=TI169738268580200167761099876310796865407842753511472561605757522002; SN=VIDA02EB88C5F8498F847B17AF4D044174.TOK72B58EE69D2E4451B9F03FA86B6378F9.1697382689.LO; at=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImQ2Yjk5NDViLWZmYTEtNGQ5ZC1iZDQyLTFkN2RmZTU4ZGNmYSJ9.eyJleHAiOjE2OTkxMTA2ODksImlhdCI6MTY5NzM4MjY4OSwiaXNzIjoia2V2bGFyIiwianRpIjoiMTdkZmUwNDctOTE1YS00MzgwLWIzODktN2I2NTdhZTFlZjdmIiwidHlwZSI6IkFUIiwiZElkIjoiVEkxNjk3MzgyNjg1ODAyMDAxNjc3NjEwOTk4NzYzMTA3OTY4NjU0MDc4NDI3NTM1MTE0NzI1NjE2MDU3NTc1MjIwMDIiLCJrZXZJZCI6IlZJREEwMkVCODhDNUY4NDk4Rjg0N0IxN0FGNEQwNDQxNzQiLCJ0SWQiOiJtYXBpIiwidnMiOiJMTyIsInoiOiJDSCIsIm0iOnRydWUsImdlbiI6NH0.mjPgsUbODwauCbn88gZcC61vB_XrbwHDj_R976ZelwM; K-ACTION=null; AMCV_17EB401053DAF4840A490D4C%40AdobeOrg=-227196251%7CMCIDTS%7C19646%7CMCMID%7C59787826550201821403920051171565315929%7CMCAID%7CNONE%7CMCOPTOUT-1697390234s%7CNONE; S=d1t13Pz8/P18/Xz8/P0lZPz8/P+DIVhufLqMW3PY1MNEdPyfKztwew2t1Aup2NBU+ytdfUpVVW8mi0SyySudQi7QX5A==',
    }

    params = {
        'pid': 'WATGEVVSZQFJEHDV',
        'lid': 'LSTWATGEVVSZQFJEHDV1KHJCJ',
        'marketplace': 'FLIPKART',
        'page': '1',
    }

    page_html = requests.get(
        'https://www.flipkart.com/nayabbazaar-men-sport-watch-high-end-silicone-strap-military-wrist-digital-boys-girls/product-reviews/itm66d57c4dd7106',
        params=params,
        cookies=cookies,
        headers=headers,
    )
    #page_html = requests.get("https://www.flipkart.com/nayabbazaar-men-sport-watch-high-end-silicone-strap-military-wrist-digital-boys-girls/product-reviews/itm66d57c4dd7106?pid=WATGEVVSZQFJEHDV&lid=LSTWATGEVVSZQFJEHDV1KHJCJ&marketplace=FLIPKART&page=" + str(i))
    soup = bs(page_html.content, 'html.parser')

    # divs = soup.find_all(class_="_1QgsS5")


    divs = soup.find_all(class_="_1QgsS5")
    # print(divs)
    print(page_html.text)

    for j in range(len(divs)):
        small_html = divs[j]
        small_soup = bs(str(small_html), 'html.parser')
        review_titles = small_soup.find_all(class_="_6K-7Co")
        ratings = small_soup.find_all(class_="_3B8WaH")

        for review_title in review_titles:
            review_text = review_title.get_text().strip()
            clean_review = re.sub(r'\W+', ' ', review_text)

            blob = TextBlob(review_text)
            misspelled_words = ', '.join([word for word in blob.words if word != word.correct()])

            data["reviews"].append(review_text)
            data["clean_reviews"].append(clean_review)
            data["misspelled_words"].append(misspelled_words)

        for rating in ratings:
            data["rating"].append(rating.get_text())

df = pd.DataFrame(data)
display(df)